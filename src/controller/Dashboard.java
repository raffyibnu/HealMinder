/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package controller;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.DefaultListModel;
/**
 *
 * @author Raffy
 */
public class Dashboard extends javax.swing.JFrame {
    private Timer timer;
    private String username; // Add this line to declare the username variable
    static final String DB_URL = "jdbc:mysql://localhost:3306/healminder";
    static final String DB_USER = "healminder";
    static final String DB_PASS = "pbo";
    public void showDashboard() {
        this.setVisible(true);
    }
    public Dashboard() {
        initComponents();
        initClock();
        updateGreeting();
        populateScheduleList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        clockPanel = new javax.swing.JPanel();
        clockLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        alarm = new javax.swing.JLabel();
        logout = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        searchButton = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        add = new javax.swing.JLabel();
        pill = new javax.swing.JLabel();
        profile = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listJadwal = new javax.swing.JList<>();
        jLabel8 = new javax.swing.JLabel();
        lihatSemua = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(360, 800));
        jPanel1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jPanel1PropertyChange(evt);
            }
        });

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Group 3.png"))); // NOI18N

        clockPanel.setBackground(new java.awt.Color(0, 102, 153));

        clockLabel.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        clockLabel.setForeground(new java.awt.Color(153, 255, 255));
        clockLabel.setText("Time");

        jLabel4.setBackground(new java.awt.Color(51, 51, 51));
        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 255, 255));
        jLabel4.setText("Halo ");

        alarm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/basil_alarm-solid.png"))); // NOI18N
        alarm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                alarmMouseClicked(evt);
            }
        });

        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logout.png"))); // NOI18N
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/search (2).png"))); // NOI18N
        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout clockPanelLayout = new javax.swing.GroupLayout(clockPanel);
        clockPanel.setLayout(clockPanelLayout);
        clockPanelLayout.setHorizontalGroup(
            clockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clockPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(clockLabel)
                .addContainerGap(311, Short.MAX_VALUE))
            .addGroup(clockPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(clockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(clockPanelLayout.createSequentialGroup()
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchButton))
                    .addGroup(clockPanelLayout.createSequentialGroup()
                        .addGroup(clockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(logout)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(alarm)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        clockPanelLayout.setVerticalGroup(
            clockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clockPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(clockLabel)
                .addGap(18, 18, 18)
                .addGroup(clockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(logout)
                    .addComponent(alarm))
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(clockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addGap(27, 27, 27))
        );

        jPanel2.setBackground(new java.awt.Color(0, 102, 153));

        add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Add.png"))); // NOI18N
        add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMouseClicked(evt);
            }
        });

        pill.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Pill.png"))); // NOI18N
        pill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pillMouseClicked(evt);
            }
        });

        profile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Profile.png"))); // NOI18N
        profile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profileMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(pill, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(add)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(profile, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(profile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel7.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 153));
        jLabel7.setText("Health News");

        jScrollPane2.setViewportView(listJadwal);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 153));
        jLabel8.setText("Schedule");

        lihatSemua.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lihatSemua.setForeground(new java.awt.Color(255, 102, 51));
        lihatSemua.setText("Lihat semua");
        lihatSemua.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lihatSemuaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(clockPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel12)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addComponent(lihatSemua)))
                .addContainerGap(34, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(42, 42, 42)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(60, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(42, 42, 42)
                    .addComponent(jLabel8)
                    .addContainerGap(246, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(clockPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(lihatSemua)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addGap(111, 111, 111)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(317, 317, 317)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(443, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(291, 291, 291)
                    .addComponent(jLabel8)
                    .addContainerGap(490, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void initClock() {
        // Create a Timer with a 1000ms (1 second) delay
        timer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                updateClock();
            }
        });
        timer.start(); // Start the timer
    }
    private void jPanel1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jPanel1PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1PropertyChange

    private void pillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pillMouseClicked
        MedicineUI medicine = new MedicineUI();
        medicine.setLocationRelativeTo(null);
        // Make the Medicine frame visible
        medicine.setVisible(true);
        // Close the current Login frame
        this.dispose();
    }//GEN-LAST:event_pillMouseClicked

    private void addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseClicked
        ScheduleUI schedule = new ScheduleUI();
        schedule.setLocationRelativeTo(null);
        // Make the Medicine frame visible
        schedule.setVisible(true);
        // Close the current Login frame
        this.dispose();
    }//GEN-LAST:event_addMouseClicked

    private void profileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileMouseClicked
        HealthProfileUI profile = new HealthProfileUI();
        profile.setLocationRelativeTo(null);
        // Make the Medicine frame visible
        profile.setVisible(true);
        // Close the current Login frame
        this.dispose();
    }//GEN-LAST:event_profileMouseClicked

    private void lihatSemuaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lihatSemuaMouseClicked
        ScheduleUI schedule = new ScheduleUI();
        schedule.setLocationRelativeTo(null);
        // Make the Medicine frame visible
        schedule.setVisible(true);
        // Close the current Login frame
        this.dispose();
    }//GEN-LAST:event_lihatSemuaMouseClicked

    private void alarmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_alarmMouseClicked
        Alarm alarm = new Alarm();
        alarm.setLocationRelativeTo(null);
        // Make the Medicine frame visible
        alarm.setVisible(true);
        // Close the current Login frame
        this.dispose();
    }//GEN-LAST:event_alarmMouseClicked

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        int option = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin logout?", "Konfirmasi Logout", JOptionPane.YES_NO_OPTION);

        // Cek apakah pengguna memilih "YES" (iya)
        if (option == JOptionPane.YES_OPTION) {
            // Jika iya, lakukan proses logout
            Login login = new Login();
            login.setLocationRelativeTo(null);
            // Make the Login frame visible
            login.setVisible(true);
            // Close the current Dashboard frame
            this.dispose();
        }
    }//GEN-LAST:event_logoutMouseClicked

    private void searchButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseClicked
        String searchInput = search.getText().trim();
        navigateToClass(searchInput);
    }//GEN-LAST:event_searchButtonMouseClicked
    private void updateClock() {
        // Update the clock label with the current time
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
        String currentTime = sdf.format(new Date());
        clockLabel.setText(currentTime);
    }
    
    public Dashboard(String username) {
        if (username != null) {
            this.username = username;
        }
        initComponents();
        initClock();
        updateGreeting(); // Call the method to update the greeting message
    }

    
    public String getUserFullNameByUsername(String username) throws SQLException {
        Connection connection = null;
        PreparedStatement statement = null;
        ResultSet resultSet = null;
        String userFullName = "";

        try {
            // Establish database connection
            connection = DriverManager.getConnection(DB_URL, DB_USER, DB_PASS);

            // Prepare SQL query to fetch user's full name based on username
            String query = "SELECT username FROM user WHERE username = ?";
            statement = connection.prepareStatement(query);
            statement.setString(1, username);

            // Execute query
            resultSet = statement.executeQuery();

            // Check if a result is obtained
            if (resultSet.next()) {
                userFullName = resultSet.getString("username");
            }
        } finally {
            // Close resources in a finally block to ensure they are closed even if an exception occurs
            if (resultSet != null) resultSet.close();
            if (statement != null) statement.close();
            if (connection != null) connection.close();
        }

        return userFullName;
    }
    
    private void updateGreeting() {
        try {
            // Retrieve user's full name based on the logged-in username
            String userFullName = getUserFullNameByUsername(username);

            // Update the greeting label
            if (!userFullName.isEmpty()) {
                jLabel4.setText("Halo " + userFullName);
            } else {
                jLabel4.setText("Halo, semoga sehat selalu");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            // Handle the exception (log it or show an error message)
            jLabel4.setText("Halo, Semoga sehat selalu");
        }
    }


// Example method to retrieve the logged-in username from the database
    private String getLoggedInUsernameFromDatabase() {
        Connection connection = null;
        PreparedStatement preparedStatement = null;
        ResultSet resultSet = null;

        try {
            // Establish database connection
            connection = DriverManager.getConnection(DB_URL, DB_USER, DB_PASS);

            // Execute a query to get the username for the logged-in user
            String query = "SELECT username FROM user WHERE username = ?"; // Replace with the appropriate condition
            preparedStatement = connection.prepareStatement(query);

            // Assuming you have the logged-in user's ID, replace 1 with the actual ID
            preparedStatement.setInt(1, 1); 

            // Execute the query
            resultSet = preparedStatement.executeQuery();

            // Check if the result set has a value
            if (resultSet.next()) {
                return resultSet.getString("username");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            // Handle the exception (log it or show an error message)
        } finally {
            // Close resources
            try {
                if (resultSet != null) resultSet.close();
                if (preparedStatement != null) preparedStatement.close();
                if (connection != null) connection.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }

        // Return null if username retrieval fails
        return null;
    }

    private void populateScheduleList() {
        try {
            // Establish a connection to the database
            Connection connection = DriverManager.getConnection(DB_URL, DB_USER, DB_PASS);

            // Prepare SQL query to fetch data from the "alarm" table
            String query = "SELECT * from alarm where id_alarm = 5; "; // You might need to adjust this query based on your data structure
            PreparedStatement preparedStatement = connection.prepareStatement(query);

            // Execute query
            ResultSet resultSet = preparedStatement.executeQuery();

            // Create a DefaultListModel to hold the data for the JList
            DefaultListModel<String> listModel = new DefaultListModel<>();

            // Iterate through the result set and add data to the list model
            while (resultSet.next()) {
                // Assuming your data structure is similar to "nama_obat - waktu"
                String namaObat = resultSet.getString("nama_obat");
                String waktu = resultSet.getString("waktu");
                String listItem = namaObat + " - " + waktu;
                listModel.addElement(listItem);
            }

            // Set the list model to the listJadwal component
            listJadwal.setModel(listModel);

            // Close resources
            resultSet.close();
            preparedStatement.close();
            connection.close();

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error fetching data from the database: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void navigateToClass(String className) {
    switch (className) {
        case "obat":
            MedicineUI medicine = new MedicineUI();
            medicine.setLocationRelativeTo(null);
            medicine.setVisible(true);
            this.dispose();
            break;
        case "jadwal":
            ScheduleUI schedule = new ScheduleUI();
            schedule.setLocationRelativeTo(null);
            schedule.setVisible(true);
            this.dispose();
            break;
        case "profil":
            HealthProfileUI healthProfile = new HealthProfileUI();
            healthProfile.setLocationRelativeTo(null);
            healthProfile.setVisible(true);
            this.dispose();
            break;
        case "alarm":
            Alarm alarm = new Alarm();
            alarm.setLocationRelativeTo(null);
            alarm.setVisible(true);
            this.dispose();
            break;
        default:
            JOptionPane.showMessageDialog(this, "Pencarian tidak ditemukan.", "Error", JOptionPane.ERROR_MESSAGE);
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Dashboard dashboardFrame = new Dashboard();
                dashboardFrame.pack();
                dashboardFrame.setLocationRelativeTo(null);
                dashboardFrame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel add;
    private javax.swing.JLabel alarm;
    private javax.swing.JLabel clockLabel;
    private javax.swing.JPanel clockPanel;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lihatSemua;
    private javax.swing.JList<String> listJadwal;
    private javax.swing.JLabel logout;
    private javax.swing.JLabel pill;
    private javax.swing.JLabel profile;
    private javax.swing.JTextField search;
    private javax.swing.JLabel searchButton;
    // End of variables declaration//GEN-END:variables
}
