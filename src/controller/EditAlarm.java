/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package controller;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.awt.Frame;
import javax.swing.Timer;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;


/**
 *
 * @author Raffy
 */
public class EditAlarm extends javax.swing.JFrame {
    private Timer alarmTimer;
    private boolean notificationShown = false;
    private DefaultListModel<String> listModel = new DefaultListModel<>();
    private static final String DB_URL = "jdbc:mysql://localhost:3306/healminder";
    private static final String DB_USER = "healminder";
    private static final String DB_PASS = "pbo";
    /**
     * Creates new form EditAlarm
     */
    public EditAlarm() {
        initComponents();
        loadObatComboBoxData();
    }
    private Connection getConnection() throws SQLException {
        return DriverManager.getConnection(DB_URL, DB_USER, DB_PASS);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        back = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        add = new javax.swing.JLabel();
        pill = new javax.swing.JLabel();
        profile = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        setAlarm = new javax.swing.JTextField();
        submit = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 102, 153));

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/mingcute_left-fill (1).png"))); // NOI18N
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 255, 255));
        jLabel1.setText("Alarm");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(back)
                .addGap(82, 82, 82)
                .addComponent(jLabel1)
                .addContainerGap(150, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 102, 153));

        add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Add.png"))); // NOI18N
        add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMouseClicked(evt);
            }
        });

        pill.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Pill.png"))); // NOI18N
        pill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pillMouseClicked(evt);
            }
        });

        profile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Profile.png"))); // NOI18N
        profile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profileMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(pill, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(add)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(profile, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(profile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel2.setBackground(new java.awt.Color(0, 102, 153));
        jLabel2.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 153));
        jLabel2.setText("Set Alarm");

        jLabel3.setBackground(new java.awt.Color(0, 102, 153));
        jLabel3.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 153));
        jLabel3.setText("Obat");

        setAlarm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setAlarmActionPerformed(evt);
            }
        });

        submit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/submit.png"))); // NOI18N
        submit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addComponent(setAlarm, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(setAlarm, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(submit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 307, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        Alarm alarm = new Alarm();
        alarm.setLocationRelativeTo(null);
        // Make the Medicine frame visible
        alarm.setVisible(true);
        // Close the current Login frame
        this.dispose();
    }//GEN-LAST:event_backMouseClicked

    private void addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseClicked
        ScheduleUI schedule = new ScheduleUI();
        schedule.setLocationRelativeTo(null);
        // Make the Medicine frame visible
        schedule.setVisible(true);
        // Close the current Login frame
        this.dispose();
    }//GEN-LAST:event_addMouseClicked

    private void pillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pillMouseClicked
        MedicineUI medicine = new MedicineUI();
        medicine.setLocationRelativeTo(null);
        // Make the Medicine frame visible
        medicine.setVisible(true);
        // Close the current Login frame
        this.dispose();
    }//GEN-LAST:event_pillMouseClicked

    private void profileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileMouseClicked
        HealthProfileUI healthProfile = new HealthProfileUI();
        healthProfile.setLocationRelativeTo(null);
        // Make the Medicine frame visible
        healthProfile.setVisible(true);
        // Close the current Login frame
        this.dispose();
    }//GEN-LAST:event_profileMouseClicked

    private void setAlarmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setAlarmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_setAlarmActionPerformed

    private void submitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitMouseClicked
        String obat = jComboBox1.getSelectedItem().toString(); // Get value from JComboBox
        String alarm = setAlarm.getText().trim();

        if (obat.isEmpty() || alarm.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please complete all information first.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validate time format (hh:mm:ss)
        if (!isValidTimeFormat(alarm)) {
            JOptionPane.showMessageDialog(this, "Invalid time format. Use hh:mm:ss format.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Set a timer to display the notification
        setNotificationTimer(alarm, obat);

        // Insert the alarm information into the database
        insertAlarmToDatabase(obat, alarm);

        // Get the existing Alarm frame
        Alarm alarmFrame = getAlarmFrame();

        JOptionPane.showMessageDialog(this, "Information saved successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_submitMouseClicked
    private void loadObatComboBoxData() {
        Connection connection = null;
        PreparedStatement preparedStatement = null;
        ResultSet resultSet = null;

        try {
            // Step 1: Establish Database Connection
            connection = getConnection();

            // Step 2: Create SQL Query
            String sql = "SELECT nama_obat FROM obat";
            preparedStatement = connection.prepareStatement(sql);

            // Step 3: Execute Query and Get Results
            resultSet = preparedStatement.executeQuery();

            // Step 4: Populate JComboBox with Data from ResultSet
            while (resultSet.next()) {
                String namaObat = resultSet.getString("nama_obat");
                jComboBox1.addItem(namaObat);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            // Handle the exception (log it or show an error message)
        } finally {
            // Step 5: Close Resources
            try {
                if (resultSet != null) resultSet.close();
                if (preparedStatement != null) preparedStatement.close();
                if (connection != null) connection.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
    private void resetNotification() {
        if (alarmTimer != null) {
            alarmTimer.stop();
            notificationShown = false;
        }
    }
    
    private Alarm getAlarmFrame() {
        // Mendapatkan semua frame yang terbuka
        Frame[] frames = Frame.getFrames();

        // Cari objek Alarm di dalam daftar frame
        for (Frame frame : frames) {
            if (frame instanceof Alarm) {
                return (Alarm) frame;
            }
        }

        return null;
    }
    
    private void insertAlarmToDatabase(String obat, String alarm) {
        Connection connection = null;
        PreparedStatement preparedStatement = null;

        try {
            // Step 1: Establish Database Connection
            connection = getConnection();

            // Step 2: Create SQL Query
            String sql = "INSERT INTO alarm (nama_obat, waktu) VALUES (?, ?)";
            preparedStatement = connection.prepareStatement(sql);

            // Step 3: Set Parameters and Execute Query
            preparedStatement.setString(1, obat);
            preparedStatement.setString(2, alarm);
            preparedStatement.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
            // Handle the exception (log it or show an error message)
        } finally {
            // Step 4: Close Resources
            try {
                if (preparedStatement != null) preparedStatement.close();
                if (connection != null) connection.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    
    private boolean isValidTimeFormat(String time) {
        String regex = "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$";
        return time.matches(regex);
    }
    
    private void setNotificationTimer(String alarmTime, String obat) {
        if (alarmTimer != null) {
            alarmTimer.stop();
        }

        int delay = calculateDelay(alarmTime); // Hitung jeda waktu dari sekarang hingga waktu alarm
        alarmTimer = new Timer(delay, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (!notificationShown) {
                    showNotification(obat);
                    notificationShown = true;
                    alarmTimer.stop();
                }
            }
        });

        alarmTimer.setRepeats(false); // Notifikasi hanya ditampilkan sekali
        alarmTimer.start();
    }
    
    private void showNotification(String obat) {
        JOptionPane.showMessageDialog(this, "Waktunya minum obat: " + obat, "Alarm", JOptionPane.INFORMATION_MESSAGE);
    }
    
    private int calculateDelay(String alarmTime) {
        try {
            String[] parts = alarmTime.split(":");
            int hours = Integer.parseInt(parts[0]);
            int minutes = Integer.parseInt(parts[1]);
            int seconds = Integer.parseInt(parts[2]);

            java.util.Calendar now = java.util.Calendar.getInstance();
            int currentHours = now.get(java.util.Calendar.HOUR_OF_DAY);
            int currentMinutes = now.get(java.util.Calendar.MINUTE);
            int currentSeconds = now.get(java.util.Calendar.SECOND);

            int delayHours = hours - currentHours;
            int delayMinutes = minutes - currentMinutes;
            int delaySeconds = seconds - currentSeconds;

            int delay = delayHours * 3600000 + delayMinutes * 60000 + delaySeconds * 1000;
            return Math.max(delay, 0); // Pastikan delay tidak negatif
        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {
            e.printStackTrace(); // Handle exception appropriately
            return 0;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditAlarm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditAlarm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditAlarm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditAlarm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditAlarm editAlarm = new EditAlarm();
                editAlarm.pack(); // Pastikan untuk memanggil pack() sebelum setLocationRelativeTo
                editAlarm.setLocationRelativeTo(null); // Membuat frame muncul di tengah layar
                editAlarm.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel add;
    private javax.swing.JLabel back;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel pill;
    private javax.swing.JLabel profile;
    private javax.swing.JTextField setAlarm;
    private javax.swing.JLabel submit;
    // End of variables declaration//GEN-END:variables
}
